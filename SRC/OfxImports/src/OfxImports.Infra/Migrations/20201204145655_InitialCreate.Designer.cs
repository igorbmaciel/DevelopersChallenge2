// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using OfxImports.Infra.Context;

namespace OfxImports.Infra.Migrations
{
    [DbContext(typeof(OfxImportsContext))]
    [Migration("20201204145655_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("OfxImports.Domain.Entities.BankAccount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("BankAccountId");

                    b.Property<string>("AccountCode")
                        .HasColumnName("accountcode");

                    b.Property<string>("AgencyCode")
                        .HasColumnName("agencycode");

                    b.Property<int>("Code")
                        .HasColumnName("code");

                    b.Property<string>("Type")
                        .HasColumnName("type");

                    b.HasKey("Id")
                        .HasName("pk_bankaccounts");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("BankAccount");
                });

            modelBuilder.Entity("OfxImports.Domain.Entities.Transaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("TransactionId");

                    b.Property<Guid>("BankAccountId")
                        .HasColumnName("bankaccountid");

                    b.Property<DateTime>("Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Date")
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("(now() at time zone 'utc')");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnName("Description")
                        .HasMaxLength(4000)
                        .IsUnicode(false);

                    b.Property<double>("TransactionValue")
                        .HasColumnName("transactionvalue");

                    b.Property<string>("Type")
                        .HasColumnName("type");

                    b.HasKey("Id")
                        .HasName("pk_transactions");

                    b.HasIndex("BankAccountId")
                        .HasName("ix_transactions_bankaccountid");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("Transaction");
                });

            modelBuilder.Entity("OfxImports.Domain.Entities.Transaction", b =>
                {
                    b.HasOne("OfxImports.Domain.Entities.BankAccount", "BankAccount")
                        .WithMany("TransactionList")
                        .HasForeignKey("BankAccountId")
                        .HasConstraintName("FK_Transaction_BankAccount")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
